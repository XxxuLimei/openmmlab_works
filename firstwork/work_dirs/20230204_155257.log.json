{"env_info": "sys.platform: linux\nPython: 3.9.13 (main, Aug 25 2022, 23:26:10) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce GTX TITAN X\nCUDA_HOME: :/usr/local/cuda-11.2:/usr/local/cuda-11.2\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.10.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX512\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.11.0+cu111\nOpenCV: 4.6.0\nMMCV: 1.7.1\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMClassification: 0.25.0+", "seed": 3231110, "mmcls_version": "0.25.0", "config": "model = dict(\n    type='ImageClassifier',\n    backbone=dict(type='MobileNetV2', widen_factor=1.0),\n    neck=dict(type='GlobalAveragePooling'),\n    head=dict(\n        type='LinearClsHead',\n        num_classes=5,\n        in_channels=1280,\n        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),\n        topk=(1, 5)))\nload_from = '/home/xilm/python_file/mmclassification-master/resources/mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'\ndataset_type = 'CustomDataset'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='RandomResizedCrop', size=224, backend='pillow'),\n    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='ToTensor', keys=['gt_label']),\n    dict(type='Collect', keys=['img', 'gt_label'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='Resize', size=(256, -1), backend='pillow'),\n    dict(type='CenterCrop', crop_size=224),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='ImageToTensor', keys=['img']),\n    dict(type='Collect', keys=['img'])\n]\ndata = dict(\n    samples_per_gpu=32,\n    workers_per_gpu=2,\n    train=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='RandomResizedCrop', size=224, backend='pillow'),\n            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='ToTensor', keys=['gt_label']),\n            dict(type='Collect', keys=['img', 'gt_label'])\n        ]),\n    val=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val',\n        ann_file=\n        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]),\n    test=dict(\n        type='CustomDataset',\n        data_prefix=\n        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val',\n        ann_file=\n        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val.txt',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='Resize', size=(256, -1), backend='pillow'),\n            dict(type='CenterCrop', crop_size=224),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ]))\nevaluation = dict(\n    interval=1, metric='accuracy', metric_options=dict(topk=(1, )))\noptimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(policy='step', gamma=0.5, step=1)\nrunner = dict(type='EpochBasedRunner', max_epochs=10)\ncheckpoint_config = dict(interval=5)\nlog_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/mobilenet-v2_flower'\ngpu_ids = range(0, 1)\ndevice = 'cuda'\nseed = 3231110\n", "CLASSES": ["daisy", "dandelion", "rose", "sunflower", "tulip"]}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 0.005, "memory": 2455, "data_time": 0.21857, "loss": 1.23182, "time": 0.36097}
{"mode": "train", "epoch": 1, "iter": 20, "lr": 0.005, "memory": 2455, "data_time": 0.00893, "loss": 0.46896, "time": 0.14059}
{"mode": "train", "epoch": 1, "iter": 30, "lr": 0.005, "memory": 2455, "data_time": 0.00863, "loss": 0.40995, "time": 0.14311}
{"mode": "train", "epoch": 1, "iter": 40, "lr": 0.005, "memory": 2455, "data_time": 0.00862, "loss": 0.45018, "time": 0.14202}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.005, "memory": 2455, "data_time": 0.00877, "loss": 0.51487, "time": 0.13964}
{"mode": "train", "epoch": 1, "iter": 60, "lr": 0.005, "memory": 2455, "data_time": 0.0086, "loss": 0.47359, "time": 0.13916}
{"mode": "train", "epoch": 1, "iter": 70, "lr": 0.005, "memory": 2455, "data_time": 0.00859, "loss": 0.546, "time": 0.1388}
{"mode": "val", "epoch": 1, "iter": 18, "lr": 0.005, "accuracy_top-1": 89.26057}
{"mode": "train", "epoch": 2, "iter": 10, "lr": 0.0025, "memory": 2455, "data_time": 0.20933, "loss": 0.46908, "time": 0.33987}
{"mode": "train", "epoch": 2, "iter": 20, "lr": 0.0025, "memory": 2455, "data_time": 0.00863, "loss": 0.37454, "time": 0.13918}
{"mode": "train", "epoch": 2, "iter": 30, "lr": 0.0025, "memory": 2455, "data_time": 0.00861, "loss": 0.29473, "time": 0.13913}
{"mode": "train", "epoch": 2, "iter": 40, "lr": 0.0025, "memory": 2455, "data_time": 0.00865, "loss": 0.30758, "time": 0.13928}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.0025, "memory": 2455, "data_time": 0.0086, "loss": 0.33714, "time": 0.13918}
{"mode": "train", "epoch": 2, "iter": 60, "lr": 0.0025, "memory": 2455, "data_time": 0.00862, "loss": 0.28988, "time": 0.1392}
{"mode": "train", "epoch": 2, "iter": 70, "lr": 0.0025, "memory": 2455, "data_time": 0.00862, "loss": 0.26986, "time": 0.13894}
{"mode": "val", "epoch": 2, "iter": 18, "lr": 0.0025, "accuracy_top-1": 93.83803}
{"mode": "train", "epoch": 3, "iter": 10, "lr": 0.00125, "memory": 2455, "data_time": 0.20869, "loss": 0.20893, "time": 0.33901}
{"mode": "train", "epoch": 3, "iter": 20, "lr": 0.00125, "memory": 2455, "data_time": 0.00861, "loss": 0.19245, "time": 0.13922}
{"mode": "train", "epoch": 3, "iter": 30, "lr": 0.00125, "memory": 2455, "data_time": 0.00861, "loss": 0.26683, "time": 0.13991}
{"mode": "train", "epoch": 3, "iter": 40, "lr": 0.00125, "memory": 2455, "data_time": 0.0087, "loss": 0.2037, "time": 0.14271}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00125, "memory": 2455, "data_time": 0.00916, "loss": 0.23773, "time": 0.1504}
{"mode": "train", "epoch": 3, "iter": 60, "lr": 0.00125, "memory": 2455, "data_time": 0.00957, "loss": 0.15975, "time": 0.15287}
{"mode": "train", "epoch": 3, "iter": 70, "lr": 0.00125, "memory": 2455, "data_time": 0.00958, "loss": 0.20373, "time": 0.15255}
{"mode": "val", "epoch": 3, "iter": 18, "lr": 0.00125, "accuracy_top-1": 94.71831}
{"mode": "train", "epoch": 4, "iter": 10, "lr": 0.00063, "memory": 2455, "data_time": 0.20834, "loss": 0.1766, "time": 0.34601}
{"mode": "train", "epoch": 4, "iter": 20, "lr": 0.00063, "memory": 2455, "data_time": 0.0094, "loss": 0.12081, "time": 0.15235}
{"mode": "train", "epoch": 4, "iter": 30, "lr": 0.00063, "memory": 2455, "data_time": 0.00959, "loss": 0.15468, "time": 0.15384}
{"mode": "train", "epoch": 4, "iter": 40, "lr": 0.00063, "memory": 2455, "data_time": 0.01019, "loss": 0.22231, "time": 0.15627}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00063, "memory": 2455, "data_time": 0.00959, "loss": 0.14995, "time": 0.15788}
{"mode": "train", "epoch": 4, "iter": 60, "lr": 0.00063, "memory": 2455, "data_time": 0.01022, "loss": 0.2129, "time": 0.15734}
{"mode": "train", "epoch": 4, "iter": 70, "lr": 0.00063, "memory": 2455, "data_time": 0.00958, "loss": 0.14772, "time": 0.15498}
{"mode": "val", "epoch": 4, "iter": 18, "lr": 0.00063, "accuracy_top-1": 95.42254}
{"mode": "train", "epoch": 5, "iter": 10, "lr": 0.00031, "memory": 2455, "data_time": 0.20835, "loss": 0.22859, "time": 0.35096}
{"mode": "train", "epoch": 5, "iter": 20, "lr": 0.00031, "memory": 2455, "data_time": 0.00983, "loss": 0.14655, "time": 0.15761}
{"mode": "train", "epoch": 5, "iter": 30, "lr": 0.00031, "memory": 2455, "data_time": 0.0096, "loss": 0.16511, "time": 0.15665}
{"mode": "train", "epoch": 5, "iter": 40, "lr": 0.00031, "memory": 2455, "data_time": 0.01009, "loss": 0.10415, "time": 0.15727}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00031, "memory": 2455, "data_time": 0.00958, "loss": 0.13715, "time": 0.15402}
{"mode": "train", "epoch": 5, "iter": 60, "lr": 0.00031, "memory": 2455, "data_time": 0.00957, "loss": 0.12033, "time": 0.15349}
{"mode": "train", "epoch": 5, "iter": 70, "lr": 0.00031, "memory": 2455, "data_time": 0.00978, "loss": 0.15431, "time": 0.15523}
{"mode": "val", "epoch": 5, "iter": 18, "lr": 0.00031, "accuracy_top-1": 95.07043}
{"mode": "train", "epoch": 6, "iter": 10, "lr": 0.00016, "memory": 2455, "data_time": 0.20838, "loss": 0.14447, "time": 0.35283}
{"mode": "train", "epoch": 6, "iter": 20, "lr": 0.00016, "memory": 2455, "data_time": 0.00965, "loss": 0.14523, "time": 0.15382}
{"mode": "train", "epoch": 6, "iter": 30, "lr": 0.00016, "memory": 2455, "data_time": 0.00956, "loss": 0.14748, "time": 0.1543}
{"mode": "train", "epoch": 6, "iter": 40, "lr": 0.00016, "memory": 2455, "data_time": 0.00968, "loss": 0.14647, "time": 0.15341}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00016, "memory": 2455, "data_time": 0.00972, "loss": 0.14956, "time": 0.15333}
{"mode": "train", "epoch": 6, "iter": 60, "lr": 0.00016, "memory": 2455, "data_time": 0.00957, "loss": 0.14314, "time": 0.15329}
{"mode": "train", "epoch": 6, "iter": 70, "lr": 0.00016, "memory": 2455, "data_time": 0.00964, "loss": 0.20113, "time": 0.15305}
{"mode": "val", "epoch": 6, "iter": 18, "lr": 0.00016, "accuracy_top-1": 94.3662}
{"mode": "train", "epoch": 7, "iter": 10, "lr": 8e-05, "memory": 2455, "data_time": 0.20848, "loss": 0.17922, "time": 0.35456}
{"mode": "train", "epoch": 7, "iter": 20, "lr": 8e-05, "memory": 2455, "data_time": 0.00995, "loss": 0.14011, "time": 0.15664}
{"mode": "train", "epoch": 7, "iter": 30, "lr": 8e-05, "memory": 2455, "data_time": 0.0096, "loss": 0.15035, "time": 0.15541}
{"mode": "train", "epoch": 7, "iter": 40, "lr": 8e-05, "memory": 2455, "data_time": 0.00984, "loss": 0.15102, "time": 0.15559}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 8e-05, "memory": 2455, "data_time": 0.00959, "loss": 0.14066, "time": 0.15798}
{"mode": "train", "epoch": 7, "iter": 60, "lr": 8e-05, "memory": 2455, "data_time": 0.00981, "loss": 0.15276, "time": 0.15838}
{"mode": "train", "epoch": 7, "iter": 70, "lr": 8e-05, "memory": 2455, "data_time": 0.0102, "loss": 0.14117, "time": 0.15706}
{"mode": "val", "epoch": 7, "iter": 18, "lr": 8e-05, "accuracy_top-1": 95.24648}
{"mode": "train", "epoch": 8, "iter": 10, "lr": 4e-05, "memory": 2455, "data_time": 0.20851, "loss": 0.14109, "time": 0.35182}
{"mode": "train", "epoch": 8, "iter": 20, "lr": 4e-05, "memory": 2455, "data_time": 0.00955, "loss": 0.16932, "time": 0.15525}
{"mode": "train", "epoch": 8, "iter": 30, "lr": 4e-05, "memory": 2455, "data_time": 0.01026, "loss": 0.17985, "time": 0.15424}
{"mode": "train", "epoch": 8, "iter": 40, "lr": 4e-05, "memory": 2455, "data_time": 0.01004, "loss": 0.10938, "time": 0.15488}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 4e-05, "memory": 2455, "data_time": 0.00958, "loss": 0.18854, "time": 0.15407}
{"mode": "train", "epoch": 8, "iter": 60, "lr": 4e-05, "memory": 2455, "data_time": 0.00985, "loss": 0.18591, "time": 0.15794}
{"mode": "train", "epoch": 8, "iter": 70, "lr": 4e-05, "memory": 2455, "data_time": 0.01003, "loss": 0.10239, "time": 0.15795}
{"mode": "val", "epoch": 8, "iter": 18, "lr": 4e-05, "accuracy_top-1": 95.07043}
{"mode": "train", "epoch": 9, "iter": 10, "lr": 2e-05, "memory": 2455, "data_time": 0.20782, "loss": 0.11427, "time": 0.35753}
{"mode": "train", "epoch": 9, "iter": 20, "lr": 2e-05, "memory": 2455, "data_time": 0.01036, "loss": 0.15371, "time": 0.16204}
{"mode": "train", "epoch": 9, "iter": 30, "lr": 2e-05, "memory": 2455, "data_time": 0.00972, "loss": 0.17293, "time": 0.15338}
{"mode": "train", "epoch": 9, "iter": 40, "lr": 2e-05, "memory": 2455, "data_time": 0.00958, "loss": 0.09992, "time": 0.15477}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 2e-05, "memory": 2455, "data_time": 0.00968, "loss": 0.17522, "time": 0.15343}
{"mode": "train", "epoch": 9, "iter": 60, "lr": 2e-05, "memory": 2455, "data_time": 0.00957, "loss": 0.08351, "time": 0.15266}
{"mode": "train", "epoch": 9, "iter": 70, "lr": 2e-05, "memory": 2455, "data_time": 0.00958, "loss": 0.16676, "time": 0.15241}
{"mode": "val", "epoch": 9, "iter": 18, "lr": 2e-05, "accuracy_top-1": 95.24648}
{"mode": "train", "epoch": 10, "iter": 10, "lr": 1e-05, "memory": 2455, "data_time": 0.20872, "loss": 0.16302, "time": 0.357}
{"mode": "train", "epoch": 10, "iter": 20, "lr": 1e-05, "memory": 2455, "data_time": 0.01026, "loss": 0.10871, "time": 0.16044}
{"mode": "train", "epoch": 10, "iter": 30, "lr": 1e-05, "memory": 2455, "data_time": 0.01015, "loss": 0.11516, "time": 0.1592}
{"mode": "train", "epoch": 10, "iter": 40, "lr": 1e-05, "memory": 2455, "data_time": 0.00975, "loss": 0.14123, "time": 0.15519}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 1e-05, "memory": 2455, "data_time": 0.00957, "loss": 0.09502, "time": 0.1536}
{"mode": "train", "epoch": 10, "iter": 60, "lr": 1e-05, "memory": 2455, "data_time": 0.00964, "loss": 0.17055, "time": 0.1549}
{"mode": "train", "epoch": 10, "iter": 70, "lr": 1e-05, "memory": 2455, "data_time": 0.00964, "loss": 0.09429, "time": 0.15475}
{"mode": "val", "epoch": 10, "iter": 18, "lr": 1e-05, "accuracy_top-1": 95.07043}
