2023-02-04 15:52:57,157 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.9.13 (main, Aug 25 2022, 23:26:10) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce GTX TITAN X
CUDA_HOME: :/usr/local/cuda-11.2:/usr/local/cuda-11.2
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
PyTorch: 1.10.0+cu111
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.11.0+cu111
OpenCV: 4.6.0
MMCV: 1.7.1
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 11.1
MMClassification: 0.25.0+
------------------------------------------------------------

2023-02-04 15:52:57,157 - mmcls - INFO - Distributed training: False
2023-02-04 15:52:57,531 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='MobileNetV2', widen_factor=1.0),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='LinearClsHead',
        num_classes=5,
        in_channels=1280,
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
load_from = '/home/xilm/python_file/mmclassification-master/resources/mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth'
dataset_type = 'CustomDataset'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='RandomResizedCrop', size=224, backend='pillow'),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='Resize', size=(256, -1), backend='pillow'),
    dict(type='CenterCrop', crop_size=224),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=32,
    workers_per_gpu=2,
    train=dict(
        type='CustomDataset',
        data_prefix=
        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/train',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='RandomResizedCrop', size=224, backend='pillow'),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CustomDataset',
        data_prefix=
        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val',
        ann_file=
        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]),
    test=dict(
        type='CustomDataset',
        data_prefix=
        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val',
        ann_file=
        '/home/xilm/python_file/mmclassification-master/data/flower_dataset/val.txt',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='Resize', size=(256, -1), backend='pillow'),
            dict(type='CenterCrop', crop_size=224),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ]))
evaluation = dict(
    interval=1, metric='accuracy', metric_options=dict(topk=(1, )))
optimizer = dict(type='SGD', lr=0.005, momentum=0.9, weight_decay=4e-05)
optimizer_config = dict(grad_clip=None)
lr_config = dict(policy='step', gamma=0.5, step=1)
runner = dict(type='EpochBasedRunner', max_epochs=10)
checkpoint_config = dict(interval=5)
log_config = dict(interval=10, hooks=[dict(type='TextLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
resume_from = None
workflow = [('train', 1)]
work_dir = './work_dirs/mobilenet-v2_flower'
gpu_ids = range(0, 1)

2023-02-04 15:52:57,531 - mmcls - INFO - Set random seed to 3231110, deterministic: False
2023-02-04 15:52:59,139 - mmcls - INFO - load checkpoint from local path: /home/xilm/python_file/mmclassification-master/resources/mobilenet_v2_batch256_imagenet_20200708-3b2dc3af.pth
2023-02-04 15:52:59,155 - mmcls - WARNING - The model and loaded state dict do not match exactly

size mismatch for head.fc.weight: copying a param with shape torch.Size([1000, 1280]) from checkpoint, the shape in current model is torch.Size([5, 1280]).
size mismatch for head.fc.bias: copying a param with shape torch.Size([1000]) from checkpoint, the shape in current model is torch.Size([5]).
2023-02-04 15:52:59,156 - mmcls - INFO - Start running, host: xilm@xilm-MS-7D17, work_dir: /home/xilm/python_file/mmclassification-master/configs/mobilenet_v2/work_dirs/mobilenet-v2_flower
2023-02-04 15:52:59,156 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-02-04 15:52:59,156 - mmcls - INFO - workflow: [('train', 1)], max: 10 epochs
2023-02-04 15:52:59,156 - mmcls - INFO - Checkpoints will be saved to /home/xilm/python_file/mmclassification-master/configs/mobilenet_v2/work_dirs/mobilenet-v2_flower by HardDiskBackend.
2023-02-04 15:53:02,854 - mmcls - INFO - Epoch [1][10/72]	lr: 5.000e-03, eta: 0:04:16, time: 0.361, data_time: 0.219, memory: 2455, loss: 1.2318
2023-02-04 15:53:04,257 - mmcls - INFO - Epoch [1][20/72]	lr: 5.000e-03, eta: 0:02:55, time: 0.141, data_time: 0.009, memory: 2455, loss: 0.4690
2023-02-04 15:53:05,688 - mmcls - INFO - Epoch [1][30/72]	lr: 5.000e-03, eta: 0:02:28, time: 0.143, data_time: 0.009, memory: 2455, loss: 0.4100
2023-02-04 15:53:07,110 - mmcls - INFO - Epoch [1][40/72]	lr: 5.000e-03, eta: 0:02:13, time: 0.142, data_time: 0.009, memory: 2455, loss: 0.4502
2023-02-04 15:53:08,505 - mmcls - INFO - Epoch [1][50/72]	lr: 5.000e-03, eta: 0:02:04, time: 0.140, data_time: 0.009, memory: 2455, loss: 0.5149
2023-02-04 15:53:09,897 - mmcls - INFO - Epoch [1][60/72]	lr: 5.000e-03, eta: 0:01:57, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.4736
2023-02-04 15:53:11,287 - mmcls - INFO - Epoch [1][70/72]	lr: 5.000e-03, eta: 0:01:51, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.5460
2023-02-04 15:53:12,280 - mmcls - INFO - Epoch(val) [1][18]	accuracy_top-1: 89.2606
2023-02-04 15:53:15,765 - mmcls - INFO - Epoch [2][10/72]	lr: 2.500e-03, eta: 0:02:00, time: 0.340, data_time: 0.209, memory: 2455, loss: 0.4691
2023-02-04 15:53:17,157 - mmcls - INFO - Epoch [2][20/72]	lr: 2.500e-03, eta: 0:01:54, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.3745
2023-02-04 15:53:18,549 - mmcls - INFO - Epoch [2][30/72]	lr: 2.500e-03, eta: 0:01:50, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.2947
2023-02-04 15:53:19,941 - mmcls - INFO - Epoch [2][40/72]	lr: 2.500e-03, eta: 0:01:46, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.3076
2023-02-04 15:53:21,333 - mmcls - INFO - Epoch [2][50/72]	lr: 2.500e-03, eta: 0:01:42, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.3371
2023-02-04 15:53:22,725 - mmcls - INFO - Epoch [2][60/72]	lr: 2.500e-03, eta: 0:01:39, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.2899
2023-02-04 15:53:24,116 - mmcls - INFO - Epoch [2][70/72]	lr: 2.500e-03, eta: 0:01:36, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.2699
2023-02-04 15:53:25,079 - mmcls - INFO - Epoch(val) [2][18]	accuracy_top-1: 93.8380
2023-02-04 15:53:28,555 - mmcls - INFO - Epoch [3][10/72]	lr: 1.250e-03, eta: 0:01:39, time: 0.339, data_time: 0.209, memory: 2455, loss: 0.2089
2023-02-04 15:53:29,947 - mmcls - INFO - Epoch [3][20/72]	lr: 1.250e-03, eta: 0:01:36, time: 0.139, data_time: 0.009, memory: 2455, loss: 0.1925
2023-02-04 15:53:31,347 - mmcls - INFO - Epoch [3][30/72]	lr: 1.250e-03, eta: 0:01:34, time: 0.140, data_time: 0.009, memory: 2455, loss: 0.2668
2023-02-04 15:53:32,779 - mmcls - INFO - Epoch [3][40/72]	lr: 1.250e-03, eta: 0:01:31, time: 0.143, data_time: 0.009, memory: 2455, loss: 0.2037
2023-02-04 15:53:34,287 - mmcls - INFO - Epoch [3][50/72]	lr: 1.250e-03, eta: 0:01:29, time: 0.150, data_time: 0.009, memory: 2455, loss: 0.2377
2023-02-04 15:53:35,816 - mmcls - INFO - Epoch [3][60/72]	lr: 1.250e-03, eta: 0:01:27, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1597
2023-02-04 15:53:37,343 - mmcls - INFO - Epoch [3][70/72]	lr: 1.250e-03, eta: 0:01:25, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.2037
2023-02-04 15:53:38,383 - mmcls - INFO - Epoch(val) [3][18]	accuracy_top-1: 94.7183
2023-02-04 15:53:41,937 - mmcls - INFO - Epoch [4][10/72]	lr: 6.250e-04, eta: 0:01:26, time: 0.346, data_time: 0.208, memory: 2455, loss: 0.1766
2023-02-04 15:53:43,462 - mmcls - INFO - Epoch [4][20/72]	lr: 6.250e-04, eta: 0:01:23, time: 0.152, data_time: 0.009, memory: 2455, loss: 0.1208
2023-02-04 15:53:45,006 - mmcls - INFO - Epoch [4][30/72]	lr: 6.250e-04, eta: 0:01:21, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1547
2023-02-04 15:53:46,563 - mmcls - INFO - Epoch [4][40/72]	lr: 6.250e-04, eta: 0:01:19, time: 0.156, data_time: 0.010, memory: 2455, loss: 0.2223
2023-02-04 15:53:48,148 - mmcls - INFO - Epoch [4][50/72]	lr: 6.250e-04, eta: 0:01:17, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1499
2023-02-04 15:53:49,716 - mmcls - INFO - Epoch [4][60/72]	lr: 6.250e-04, eta: 0:01:15, time: 0.157, data_time: 0.010, memory: 2455, loss: 0.2129
2023-02-04 15:53:51,273 - mmcls - INFO - Epoch [4][70/72]	lr: 6.250e-04, eta: 0:01:13, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1477
2023-02-04 15:53:52,343 - mmcls - INFO - Epoch(val) [4][18]	accuracy_top-1: 95.4225
2023-02-04 15:53:55,951 - mmcls - INFO - Epoch [5][10/72]	lr: 3.125e-04, eta: 0:01:13, time: 0.351, data_time: 0.208, memory: 2455, loss: 0.2286
2023-02-04 15:53:57,525 - mmcls - INFO - Epoch [5][20/72]	lr: 3.125e-04, eta: 0:01:12, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1465
2023-02-04 15:53:59,096 - mmcls - INFO - Epoch [5][30/72]	lr: 3.125e-04, eta: 0:01:10, time: 0.157, data_time: 0.010, memory: 2455, loss: 0.1651
2023-02-04 15:54:00,664 - mmcls - INFO - Epoch [5][40/72]	lr: 3.125e-04, eta: 0:01:08, time: 0.157, data_time: 0.010, memory: 2455, loss: 0.1042
2023-02-04 15:54:02,204 - mmcls - INFO - Epoch [5][50/72]	lr: 3.125e-04, eta: 0:01:06, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1371
2023-02-04 15:54:03,741 - mmcls - INFO - Epoch [5][60/72]	lr: 3.125e-04, eta: 0:01:04, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1203
2023-02-04 15:54:05,292 - mmcls - INFO - Epoch [5][70/72]	lr: 3.125e-04, eta: 0:01:02, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1543
2023-02-04 15:54:05,472 - mmcls - INFO - Saving checkpoint at 5 epochs
2023-02-04 15:54:06,382 - mmcls - INFO - Epoch(val) [5][18]	accuracy_top-1: 95.0704
2023-02-04 15:54:10,007 - mmcls - INFO - Epoch [6][10/72]	lr: 1.563e-04, eta: 0:01:01, time: 0.353, data_time: 0.208, memory: 2455, loss: 0.1445
2023-02-04 15:54:11,544 - mmcls - INFO - Epoch [6][20/72]	lr: 1.563e-04, eta: 0:00:59, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1452
2023-02-04 15:54:13,088 - mmcls - INFO - Epoch [6][30/72]	lr: 1.563e-04, eta: 0:00:57, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1475
2023-02-04 15:54:14,623 - mmcls - INFO - Epoch [6][40/72]	lr: 1.563e-04, eta: 0:00:55, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1465
2023-02-04 15:54:16,155 - mmcls - INFO - Epoch [6][50/72]	lr: 1.563e-04, eta: 0:00:53, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1496
2023-02-04 15:54:17,688 - mmcls - INFO - Epoch [6][60/72]	lr: 1.563e-04, eta: 0:00:52, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1431
2023-02-04 15:54:19,220 - mmcls - INFO - Epoch [6][70/72]	lr: 1.563e-04, eta: 0:00:50, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.2011
2023-02-04 15:54:20,255 - mmcls - INFO - Epoch(val) [6][18]	accuracy_top-1: 94.3662
2023-02-04 15:54:23,900 - mmcls - INFO - Epoch [7][10/72]	lr: 7.813e-05, eta: 0:00:48, time: 0.355, data_time: 0.208, memory: 2455, loss: 0.1792
2023-02-04 15:54:25,462 - mmcls - INFO - Epoch [7][20/72]	lr: 7.813e-05, eta: 0:00:47, time: 0.157, data_time: 0.010, memory: 2455, loss: 0.1401
2023-02-04 15:54:27,019 - mmcls - INFO - Epoch [7][30/72]	lr: 7.813e-05, eta: 0:00:45, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1504
2023-02-04 15:54:28,573 - mmcls - INFO - Epoch [7][40/72]	lr: 7.813e-05, eta: 0:00:43, time: 0.156, data_time: 0.010, memory: 2455, loss: 0.1510
2023-02-04 15:54:30,155 - mmcls - INFO - Epoch [7][50/72]	lr: 7.813e-05, eta: 0:00:41, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1407
2023-02-04 15:54:31,742 - mmcls - INFO - Epoch [7][60/72]	lr: 7.813e-05, eta: 0:00:39, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1528
2023-02-04 15:54:33,310 - mmcls - INFO - Epoch [7][70/72]	lr: 7.813e-05, eta: 0:00:37, time: 0.157, data_time: 0.010, memory: 2455, loss: 0.1412
2023-02-04 15:54:34,353 - mmcls - INFO - Epoch(val) [7][18]	accuracy_top-1: 95.2465
2023-02-04 15:54:37,967 - mmcls - INFO - Epoch [8][10/72]	lr: 3.906e-05, eta: 0:00:36, time: 0.352, data_time: 0.209, memory: 2455, loss: 0.1411
2023-02-04 15:54:39,526 - mmcls - INFO - Epoch [8][20/72]	lr: 3.906e-05, eta: 0:00:34, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1693
2023-02-04 15:54:41,066 - mmcls - INFO - Epoch [8][30/72]	lr: 3.906e-05, eta: 0:00:32, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1799
2023-02-04 15:54:42,611 - mmcls - INFO - Epoch [8][40/72]	lr: 3.906e-05, eta: 0:00:30, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1094
2023-02-04 15:54:44,154 - mmcls - INFO - Epoch [8][50/72]	lr: 3.906e-05, eta: 0:00:29, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.1885
2023-02-04 15:54:45,735 - mmcls - INFO - Epoch [8][60/72]	lr: 3.906e-05, eta: 0:00:27, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1859
2023-02-04 15:54:47,312 - mmcls - INFO - Epoch [8][70/72]	lr: 3.906e-05, eta: 0:00:25, time: 0.158, data_time: 0.010, memory: 2455, loss: 0.1024
2023-02-04 15:54:48,364 - mmcls - INFO - Epoch(val) [8][18]	accuracy_top-1: 95.0704
2023-02-04 15:54:52,042 - mmcls - INFO - Epoch [9][10/72]	lr: 1.953e-05, eta: 0:00:23, time: 0.358, data_time: 0.208, memory: 2455, loss: 0.1143
2023-02-04 15:54:53,656 - mmcls - INFO - Epoch [9][20/72]	lr: 1.953e-05, eta: 0:00:21, time: 0.162, data_time: 0.010, memory: 2455, loss: 0.1537
2023-02-04 15:54:55,189 - mmcls - INFO - Epoch [9][30/72]	lr: 1.953e-05, eta: 0:00:20, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1729
2023-02-04 15:54:56,737 - mmcls - INFO - Epoch [9][40/72]	lr: 1.953e-05, eta: 0:00:18, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.0999
2023-02-04 15:54:58,271 - mmcls - INFO - Epoch [9][50/72]	lr: 1.953e-05, eta: 0:00:16, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.1752
2023-02-04 15:54:59,797 - mmcls - INFO - Epoch [9][60/72]	lr: 1.953e-05, eta: 0:00:14, time: 0.153, data_time: 0.010, memory: 2455, loss: 0.0835
2023-02-04 15:55:01,323 - mmcls - INFO - Epoch [9][70/72]	lr: 1.953e-05, eta: 0:00:12, time: 0.152, data_time: 0.010, memory: 2455, loss: 0.1668
2023-02-04 15:55:02,322 - mmcls - INFO - Epoch(val) [9][18]	accuracy_top-1: 95.2465
2023-02-04 15:55:05,994 - mmcls - INFO - Epoch [10][10/72]	lr: 9.766e-06, eta: 0:00:10, time: 0.357, data_time: 0.209, memory: 2455, loss: 0.1630
2023-02-04 15:55:07,597 - mmcls - INFO - Epoch [10][20/72]	lr: 9.766e-06, eta: 0:00:09, time: 0.160, data_time: 0.010, memory: 2455, loss: 0.1087
2023-02-04 15:55:09,185 - mmcls - INFO - Epoch [10][30/72]	lr: 9.766e-06, eta: 0:00:07, time: 0.159, data_time: 0.010, memory: 2455, loss: 0.1152
2023-02-04 15:55:10,735 - mmcls - INFO - Epoch [10][40/72]	lr: 9.766e-06, eta: 0:00:05, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1412
2023-02-04 15:55:12,272 - mmcls - INFO - Epoch [10][50/72]	lr: 9.766e-06, eta: 0:00:03, time: 0.154, data_time: 0.010, memory: 2455, loss: 0.0950
2023-02-04 15:55:13,821 - mmcls - INFO - Epoch [10][60/72]	lr: 9.766e-06, eta: 0:00:02, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.1706
2023-02-04 15:55:15,370 - mmcls - INFO - Epoch [10][70/72]	lr: 9.766e-06, eta: 0:00:00, time: 0.155, data_time: 0.010, memory: 2455, loss: 0.0943
2023-02-04 15:55:15,551 - mmcls - INFO - Saving checkpoint at 10 epochs
2023-02-04 15:55:16,430 - mmcls - INFO - Epoch(val) [10][18]	accuracy_top-1: 95.0704
